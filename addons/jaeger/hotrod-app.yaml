---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jaeger-hotrod
  labels:
    app.kubernetes.io/component: hotrod

---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-hotrod
  labels:
    app.kubernetes.io/component: hotrod
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/component: hotrod

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-hotrod
  labels:
    app.kubernetes.io/component: hotrod
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: hotrod
  template:
    metadata:
      labels:
        app.kubernetes.io/component: hotrod
    spec:
      serviceAccountName: jaeger-hotrod
      containers:
        - name: jaeger-hotrod
          image: jaegertracing/example-hotrod:1.15.1
          imagePullPolicy: Always
          env:
            - name: JAEGER_AGENT_HOST
              value: jaeger-agent
            - name: JAEGER_AGENT_PORT
              value: "6831"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-hotrod-traefik
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
  - http:
      paths:
      - path: /hotrod
        pathType: Prefix
        backend:
          service:
            name: jaeger-hotrod
            port:
              number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-hotrod-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - http:
      paths:
      - path: /hotrod(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: jaeger-hotrod
            port:
              number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-hotrod-haproxy
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: haproxy
    ingress.kubernetes.io/ssl-redirect: 'false'
spec:
  rules:
  - http:
      paths:
      - path: /hotrod
        pathType: Prefix
        backend:
          service:
            name: jaeger-hotrod
            port:
              number: 80
